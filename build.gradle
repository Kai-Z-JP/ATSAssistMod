buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "https://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
			changing = true
		}
	}
}
plugins {
	id "com.anatawa12.jarInJar" version "1.0.3"
}

configurations {
	embed
	compile.extendsFrom(embed)
}

apply plugin: 'forge'

version = "SNAPSHOT"
group = "jp.kaiz.atsassistmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ATSAssistMod"

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
	runDir = "eclipse"
}

repositories {
	maven {
		url "https://www.cursemaven.com"
	}
}

dependencies {
	// you may put jars on which you depend on in ./libs
	// or you may define them like so..
	//compile "some.group:artifact:version:classifier"
	//compile "some.group:artifact:version"

	// real examples
	//compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
	//compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

	// for more info...
	// http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
	// http://www.gradle.org/docs/current/userguide/dependency_management.html
	compile  "curse.maven:ngtlib-288989:2940833"
	compile  "curse.maven:realtrainmod-288988:3039063"

	embed 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version': project.version, 'mcversion': project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

jar {
	configurations.embed.each { dep ->
		from(project.zipTree(dep)) {
			exclude 'META-INF', 'META-INF/versions/**', 'META-INF/maven/**'
		}
	}

	from(rootDir) {
		include 'README.md'
		include 'LICENCE'
	}
}

tasks.withType(Jar) {
	compileJava.options.encoding = 'UTF-8'
}
sourceCompatibility = "1.8"
targetCompatibility = "1.8"


tasks.embedJarInJar {
	dependsOn tasks.reobf
	target = "FMLInCpw"
	basePackage = "jp.kaiz.atsassistmod.JarInJar"
}

tasks.assemble {
	dependsOn tasks.embedJarInJar
}